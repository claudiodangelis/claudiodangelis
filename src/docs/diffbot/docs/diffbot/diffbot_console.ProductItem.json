{"name":"ProductItem","qualifiedName":"diffbot/diffbot_console.ProductItem","comment":"","isAbstract":false,"superclass":"dart-core.Object","implements":[],"subclass":[],"variables":{},"inheritedVariables":{},"methods":{"setters":{},"getters":{"title":{"name":"title","qualifiedName":"diffbot/diffbot_console.ProductItem.title","comment":"<p>Name of the product. Returned by default.</p>","commentFrom":"","inheritedFrom":"","static":"false","abstract":"false","constant":"false","return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"description":{"name":"description","qualifiedName":"diffbot/diffbot_console.ProductItem.description","comment":"<p>Description, if available, of the product. Returned by default.</p>","commentFrom":"","inheritedFrom":"","static":"false","abstract":"false","constant":"false","return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"brand":{"name":"brand","qualifiedName":"diffbot/diffbot_console.ProductItem.brand","comment":"<p>Experimental Brand, if available, of the product. Returned with fields.</p>","commentFrom":"","inheritedFrom":"","static":"false","abstract":"false","constant":"false","return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"media":{"name":"media","qualifiedName":"diffbot/diffbot_console.ProductItem.media","comment":"<p>Array of media items (images or videos) of the product. Returned by\ndefault.</p>","commentFrom":"","inheritedFrom":"","static":"false","abstract":"false","constant":"false","return":[{"outer":"dart-core.List","inner":[{"outer":"diffbot/diffbot_console.ProductMedia","inner":[]}]}],"parameters":{},"annotations":[]},"offerPrice":{"name":"offerPrice","qualifiedName":"diffbot/diffbot_console.ProductItem.offerPrice","comment":"<p>offer or actual/'final' price of the product. Returned by default.</p>","commentFrom":"","inheritedFrom":"","static":"false","abstract":"false","constant":"false","return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"regularPrice":{"name":"regularPrice","qualifiedName":"diffbot/diffbot_console.ProductItem.regularPrice","comment":"<p>Regular or original price of the product, if available. Returned by\ndefault.</p>","commentFrom":"","inheritedFrom":"","static":"false","abstract":"false","constant":"false","return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"saveAmount":{"name":"saveAmount","qualifiedName":"diffbot/diffbot_console.ProductItem.saveAmount","comment":"<p>Discount or amount saved, if available. Returned by default.</p>","commentFrom":"","inheritedFrom":"","static":"false","abstract":"false","constant":"false","return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"shippingAmount":{"name":"shippingAmount","qualifiedName":"diffbot/diffbot_console.ProductItem.shippingAmount","comment":"<p>Shipping price, if available. Returned by default.</p>","commentFrom":"","inheritedFrom":"","static":"false","abstract":"false","constant":"false","return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"productId":{"name":"productId","qualifiedName":"diffbot/diffbot_console.ProductItem.productId","comment":"<p>A Diffbot-determined unique product ID. If upc, isbn, mpn or sku are\nidentified on the page, productId will select from these values in the\nabove order. Otherwise Diffbot will attempt to derive the best unique\nvalue for the product. Returned by default.</p>","commentFrom":"","inheritedFrom":"","static":"false","abstract":"false","constant":"false","return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"upc":{"name":"upc","qualifiedName":"diffbot/diffbot_console.ProductItem.upc","comment":"<p>Universal Product Code (UPC/EAN), if available. Returned by default.</p>","commentFrom":"","inheritedFrom":"","static":"false","abstract":"false","constant":"false","return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"prefixCode":{"name":"prefixCode","qualifiedName":"diffbot/diffbot_console.ProductItem.prefixCode","comment":"<p>GTIN prefix code, typically the country of origin as identified by\nUPC/ISBN. Returned by default.</p>","commentFrom":"","inheritedFrom":"","static":"false","abstract":"false","constant":"false","return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"productOrigin":{"name":"productOrigin","qualifiedName":"diffbot/diffbot_console.ProductItem.productOrigin","comment":"<p>If available, the two-character ISO country code where the product was\nproduced. Returned by default.</p>","commentFrom":"","inheritedFrom":"","static":"false","abstract":"false","constant":"false","return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"isbn":{"name":"isbn","qualifiedName":"diffbot/diffbot_console.ProductItem.isbn","comment":"<p>International Standard Book Number (ISBN), if available. Returned by\ndefault.</p>","commentFrom":"","inheritedFrom":"","static":"false","abstract":"false","constant":"false","return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"sku":{"name":"sku","qualifiedName":"diffbot/diffbot_console.ProductItem.sku","comment":"<p>Stock Keeping Unit -- store/vendor inventory number -- if available.\nReturned with fields.</p>","commentFrom":"","inheritedFrom":"","static":"false","abstract":"false","constant":"false","return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"mpn":{"name":"mpn","qualifiedName":"diffbot/diffbot_console.ProductItem.mpn","comment":"<p>Manufacturer's Product Number, if available. Returned with fields.</p>","commentFrom":"","inheritedFrom":"","static":"false","abstract":"false","constant":"false","return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{"":{"name":"","qualifiedName":"diffbot/diffbot_console.ProductItem.ProductItem-","comment":"","commentFrom":"","inheritedFrom":"","static":"false","abstract":"false","constant":"false","return":[{"outer":"dynamic","inner":[]}],"parameters":{"_data":{"name":"_data","optional":"false","named":"false","default":"false","type":[{"outer":"dart-core.Map","inner":[{"outer":"dart-core.String","inner":[]},{"outer":"dynamic","inner":[]}]}],"value":"null","annotations":[]}},"annotations":[]}},"operators":{},"methods":{"toString":{"name":"toString","qualifiedName":"diffbot/diffbot_console.ProductItem.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"dart-core.Object.toString","inheritedFrom":"","static":"false","abstract":"false","constant":"false","return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]}}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"diffbot/diffbot_console.ProductItem.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>diffbot/diffbot_console.ProductItem.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":"false","abstract":"false","constant":"false","return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"diffbot/diffbot_console.ProductItem.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":"false","abstract":"false","constant":"false","return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"diffbot/diffbot_console.ProductItem.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>diffbot/diffbot_console.ProductItem.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>diffbot/diffbot_console.ProductItem.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":"false","abstract":"false","constant":"false","return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":"false","named":"false","default":"false","type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"methods":{"toString":{"name":"toString","qualifiedName":"diffbot/diffbot_console.ProductItem.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":"false","abstract":"false","constant":"false","return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"diffbot/diffbot_console.ProductItem.noSuchMethod","comment":"<p><a>diffbot/diffbot_console.ProductItem.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>diffbot/diffbot_console.ProductItem.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>diffbot/diffbot_console.ProductItem.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>diffbot/diffbot_console.ProductItem.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":"false","abstract":"false","constant":"false","return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":"false","named":"false","default":"false","type":[{"outer":"dart-core.Invocation","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}}},"annotations":[],"generics":{}}